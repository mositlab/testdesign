// .list-navigation,
.tree {
    .iconUxt {
        font-size: $iconSizeL;
    }

    &--compact {
        .tree__node {
            height: 32px;

            .node__details {

                &:focus-visible::before {
                    outline-offset: -2px
                }

                .details__content {

                    .details__title,
                    .details__description {
                        line-height: 1.1em;
                    }
                }
            }
        }
    }

    .checkboxWrapper {
        margin-right: 8px;
        z-index: 2;

        .inputGroup__checkbox,
        input[type="checkbox"]:not(.switch__checkbox) {
            cursor: pointer;
            margin: 0;
            opacity: 0;
            position: absolute;


            + label {
                color: rgba(var(--color-font), 1);
                display: flex;
                font-size: $ms0-fontSize;
                text-indent: -26px;

                &:hover {
                    cursor: pointer;
                }

                &:before {
                    background: rgba(var(--color-interface), 1);
                    border-radius: 2px;
                    border: 1px solid rgba(var(--color-base600), 1);
                    content: '';
                    cursor: pointer;
                    height: 14px;
                    margin-right: 10px;
                    position: relative;
                    text-align: center;
                    transition: border 250ms ease-in-out, background-color 250ms ease-in-out;
                    width: 14px;
                }
            }

            &:checked {
                + label {
                    position: relative;

                    &:before {
                        background-color: rgba(var(--color-primary), 1);
                        border: 1px solid rgba(var(--color-primary), 1);
                        box-shadow: none;
                    }

                    &:after {
                        border: solid rgba(var(--color-interface), 1);
                        border-width: 0 2px 2px 0;
                        content: '';
                        display: block;
                        height: 9px;
                        left: 5px;
                        position: absolute;
                        top: 1px;
                        transform: rotate(45deg);
                        width: 4px;
                    }
                }

                &[disabled],
                &.is-disabled {
                    + label:after {
                        border-color: rgba(var(--color-base750), 1);
                    }
                }
            }

            &:focus {
                + label {
                    &:before {
                        border-color: rgba(var(--color-primary), 1);
                        box-shadow: 0 0px 2px 0px rgba(var(--color-primary), 1);
                        outline: none;
                    }
                }
            }

            &:disabled,
            &.is-disabled {
                cursor: not-allowed;

                + label {
                    color: rgba(var(--color-base800), 1);
                    cursor: not-allowed;

                    &:before {
                        border-color: rgba(var(--color-border), 1);
                        background: rgba(var(--color-base900), 1);
                        box-shadow: none;
                        cursor: not-allowed;
                    }

                    + label.checkbox__description {
                        color: rgba(var(--color-font-secondary), 1);
                        cursor: not-allowed;
                    }
                }
            }

            + label {
                &:empty {
                    &:before {
                        margin-right: 0;
                    }
                }
            }

            &.inputGroup__checkbox--indeterminate + label:before {
                background-color: transparent;
                box-shadow: none;
            }

            // manually style indeterminate 'checkbox' by offsetting a pseudo element on the following label
            // should be replaced by native indeterminate styling once available as real property in css
            &.inputGroup__checkbox--indeterminate + label:after {
                box-shadow: 0 0 1px rgba(var(--color-primary-darker), 1);
                content: "";
                display: block;
                position: absolute;
                width: 8px;
                height: 2px;
                background-color: rgba(var(--color-primary), 1);
                left: 4px;
                top: 9px;
            }
        }
    }


    &__node {
        align-items: center;
        display: flex;
        position: relative;

        height: 44px;

        .button,
        button {
            margin: 0;
            margin-left: 4px;
        }

        .node__arrow,
        .details__icon,
        .details__title,
        .node__additional > *:not(.menu),
        .details__description {
            z-index: 1;
            position: relative;
        }

        .node__arrow {
            @include iconUxt-regular(arrowSingleRight);

            color: rgba(var(--color-primary), 1);
            visibility: hidden;

            &::before {
                display: block;
            }

            &:hover,
            &:active {
                color: rgba(var(--color-primary), 1);
            }
        }

        .button.node__arrow,
        .button.node__favorite {
            font-size: $iconSizeM;
            height: 32px;
            padding: 7px 7px;
        }

        .node__details {
            align-items: center;
            color: unset;
            display: flex;
            flex-direction: row;
            gap: 8px;
            overflow: hidden;
            text-decoration: none;

            &:visited {
                .details__title {
                    color: rgba(var(--color-font), 1);
                }

                .details__description {
                    color: rgba(var(--color-font-secondary), 1);
                }

            }


            &:focus-visible {
                outline: unset;
                text-decoration: none;

                &:before {
                    outline: 2px solid rgba(var(--color-primary-light), 1);
                }

                .details__icon {
                    color: rgba(var(--color-font), 1);
                }
            }

            &:hover {
                text-decoration: none;

                .details__icon,
                .details__content .details__title,
                .details__content .details__description {
                    color: rgba(var(--color-primary-dark), 1);
                }

                &::before {
                    background-color: rgba(var(--color-primary-lighter), .15);
                }
            }

            &:active {
                &::before {
                    background-color: rgba(var(--color-primary-lighter), .4);
                }
            }

            &::before {
                content: "";
                position: absolute;
                inset: 0;
                transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;
            }

            .details__icon {
                font-size: $iconSizeL;
            }

            .details__content {
                display: flex;
                flex-direction: column;
                overflow: hidden;

                .details__title,
                .details__description {
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

                .details__title {
                    font-size: $ms0-fontSize;
                    line-height: $ms0-lineHeight;
                }

                .details__description {
                    color: rgba(var(--color-font-secondary), 1);
                    font-size: $ms-1-fontSize;
                    line-height: $ms-1-lineHeight;
                }

            }


        }

        .node__details:has(+ .node__additional *:hover) {
            &::before {
                background-color: rgba(var(--color-primary-lighter), .15);
            }
        }

        .node__arrow:hover ~ .node__details::before {
            background-color: rgba(var(--color-primary-lighter), .15);
        }

        .node__additional {
            align-items: center;
            display: flex;

            margin-left: auto;
            margin-right: 4px;
            white-space: nowrap;

            .node__favorite {
                @include favoriteButton;
            }

            .menu {
                margin-left: 0;

                button:not(.popover__item),
                .button:not(.popover__item) {
                    background-color: rgba(0, 0, 0, 0);
                    margin: 8px 0;

                    &:hover {
                        background-color: rgba(var(--color-primary-lightest), 1);
                    }

                    &:active {
                        background-color: rgba(var(--color-primary-lighter), 1);
                    }
                }

                &.is-shown {

                    > .button,
                    > button {
                        background-color: rgba(var(--color-primary-lighter), 1);
                    }


                }

                .popover__container {
                    min-width: auto;
                }
            }
        }


        &.is-selected {

            .node__details {
                .details__title {
                    font-weight: bold;
                }

                &::before {
                    background-color: rgba(var(--color-primary-lightest), 1);
                }

                &:hover {
                    &::before {
                        background-color: rgba(var(--color-primary-lighter), .15);
                    }
                }

                &:active {
                    &::before {
                        background-color: rgba(var(--color-primary-lighter), .4);
                    }
                }
            }
        }

        &.is-disabled {
            &::after {
                content: "";
                background-color: rgba(var(--color-interface), 1);
                inset: 0;
                opacity: 0.5;
                position: absolute;
                z-index: 2;
            }

            &:hover {
                &::after {
                    cursor: not-allowed;
                }
            }

            &.is-selected {
                .node__details::after {
                    background-color: unset;
                }
            }

            .node__favorite,
            .node__favorite.is-selected {
                color: rgba(var(--color-font-disabled), 1);
            }

            .node__arrow {
                color: rgba(var(--color-font-disabled), 1);
            }
        }

        &.is-hidden {
            display: none;
        }

        @include statusIndicators;

        &.is-collapsed.is-nested {

            // .list-navigation,
            .tree__node {
                display: none;
            }

            .node__arrow {
                @include iconUxt-regular(arrowSingleRight);
                color: rgba(var(--color-font), 1);
                visibility: visible;

                &:hover,
                &:active {
                    color: rgba(var(--color-primary), 1);
                }
            }
        }

        &.is-nested {
            .node__arrow {
                @include iconUxt-regular(arrowSingleDown);
                visibility: visible;
            }
        }


        @for $i from 1 through $treeLevelCount {
            &.is-level#{$i} {
                padding-left: $treeLevelSpacing * $i;
            }
        }
    }
}