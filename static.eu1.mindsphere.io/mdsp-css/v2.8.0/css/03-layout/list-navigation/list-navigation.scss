@mixin item__link {
    background-color: inherit;
    box-sizing: border-box;
    color: rgba(var(--color-font), 1);
    display: flex;
    align-items: center;
    text-decoration: none;
    padding: 4px 4px;
    padding-left: 16px;
    min-height: 44px;
    @include hoverTransition($animate: (background-color, color));

    &:focus {

        box-shadow: inset 0 0 0 2px rgba(var(--color-primary-light), 1);
        // IE11 does not support outline-offset, hence the feature query
        outline: 0;

        @supports (outline-offset: -2px) {
            box-shadow: none;
            outline-offset: -2px;
            outline: 2px solid rgba(var(--color-primary-light), 1);
        }
    }

    &:hover {
        background-color: rgba(var(--color-primary-lighter), .15);

        .item__icon {
            color: rgba(var(--color-primary-dark), 1);
        }

        .item__content {

            .label,
            .description {
                color: rgba(var(--color-primary-dark), 1);
                text-decoration: none;
            }
        }
    }

    &:active,
    &.is-activated {
        background-color: rgba(var(--color-primary-lighter), 0.4);

        // no focus outline on active
        box-shadow: none;
        outline: 0;
    }

    &.is-current {
        background-color: rgba(var(--color-primary-lightest), 0.5);
    }

    &.is-disabled {
        opacity: 0.5;
        pointer-events: none;

        &:hover {
            cursor: not-allowed;
            background-color: transparent;
            text-decoration: none;

            .item__icon {
                color: rgba(var(--color-font), 1);
            }

            .item__content {

                .label,
                .description {
                    text-decoration: none;
                }

                .label {
                    color: rgba(var(--color-font), 1);
                }

                .description {
                    color: rgba(var(--color-font-secondary), 1);
                }
            }
        }

        &:focus {
            background-color: transparent;
            box-shadow: none;
            // IE11 does not support outline-offset, hence the feature query
            outline: 0;
        }
    }
}

@mixin item__action {
    align-items: center;

    box-sizing: border-box;
    color: rgba(var(--color-font), 1);
    display: flex;
    height: 48px;
    position: absolute;
    text-align: center;
    text-decoration: none;
    top: calc(50% - 24px);
    width: 32px;
    @include hoverTransition($animate: (background-color));

    &:after {
        border-radius: 3px;
        box-sizing: border-box;
        display: inline-block;
        content: '';
        height: 32px;
        width: 32px;
        position: absolute;
        top: calc(50% - 16px);
        top: calc(50% - 1rem);
        transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;
        z-index: 0;
    }

    &:hover:after {
        background-color: rgba(var(--color-primary-lightest), 1);
    }

    &:focus {
        outline: none;
    }

    &:focus:after {
        box-shadow: rgba(var(--color-primary-light), 1) 0 0 0 3px; // fake border color since we cannot use the outline here, button is not rectangular
        outline: none;
    }

    &:active:after,
    &.is-activated:after {
        background-color: rgba(var(--color-primary-lighter), 1);
        box-shadow: none;
    }
}


.listNavigation {
    display: flex;
    flex-direction: column;
    height: 100%;

    // container for multiple lists
    .listNavigation__lists {
        background-color: inherit;
        flex-grow: 1;
        flex-basis: auto;
        overflow-y: auto;
        overflow-x: hidden;

    }

    // one single list header
    .listNavigation__header {
        background-color: inherit;
        border-bottom: 1px solid rgba(var(--color-border), 1);
        border-top: 1px solid rgba(var(--color-border), 1);
        color: rgba(var(--color-font), 1);
        flex-basis: auto;
        flex-shrink: 0;
        font-family: $defaultFont;
        font-size: $ms0-fontSize;
        font-weight: bold;
        line-height: $ms0-lineHeight;
        padding-top: 14px;
        padding-bottom: 14px;
        padding-left: 16px;
        padding-right: 16px;

        .header__link {
            text-decoration: none;
            color: rgba(var(--color-font), 1);
        }


        &:first-child {
            border-top: 0;
        }

        &.is-advanced {
            background-color: inherit;
            padding: 0;
            position: relative;

            a.header__link {
                @include item__link();
                padding: 14px 16px 14px 48px;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            a.header__back {
                @include item__action();
                @include iconUxt-bold(arrowSingleLeft);
                left: 12px;

                &:before {
                    font-size: $iconSizeM;
                    position: relative;
                    width: 32px;
                    z-index: 1;
                }
            }

            a.header__action {
                @include item__action();
                bottom: 0;
                height: auto;
                right: 0px;
                top: 0;

                &:before {
                    font-size: 24px;
                    left: 4px;
                    position: relative;
                    width: 32px;
                    z-index: 1;
                }

                .iconUxt {
                    font-size: $iconSizeL;
                    left: 12px;
                    position: relative;
                    z-index: 1;
                }
            }

            a.header__action + a.header__action {
                right: 52px;
                width: 48px;

                &:after {
                    right: 8px;
                }
            }

            a.header__action + a.header__action + a.header__action {
                right: 100px;
            }
        }
    }

    // one single list (group of list items)
    .listNavigation__list {
        background-color: inherit;
        list-style-type: none;
        margin: 0;
        padding-left: 0;
        overflow-y: auto;

        & + .listNavigation__header {
            border-top: none;
        }

        .list__item {
            margin: 0;
            position: relative;

            @include statusIndicators;

            .item__link {
                @include item__link();

                .item__favorite {
                    @include favoriteButton;
                    margin: 0;
                    z-index: 2;
                }

                &.is-current {
                    background-color: rgba(var(--color-primary-lightest), 0.5);

                    .item__content {

                        .label,
                        h4 {
                            font-weight: bold;
                        }
                    }
                }

                &.is-disabled {

                    .item__favorite,
                    .item__favorite.is-selected {
                        cursor: not-allowed;
                        color: rgba(var(--color-font-disabled));

                        &:hover {
                            background-color: unset;
                        }
                    }
                }

                .checkboxWrapper {
                    margin-right: 8px;

                }

                .inputGroup__checkbox,
                input[type="checkbox"]:not(.switch__checkbox) {
                    cursor: pointer;
                    margin: 0;
                    opacity: 0;
                    position: absolute;
                    z-index: 2;

                    + label {
                        color: rgba(var(--color-font), 1);
                        display: flex;
                        font-size: $ms0-fontSize;
                        text-indent: -26px;

                        &:hover {
                            cursor: pointer;
                        }

                        &:before {
                            background: rgba(var(--color-interface), 1);
                            border-radius: 2px;
                            border: 1px solid rgba(var(--color-base600), 1);
                            content: '';
                            cursor: pointer;
                            height: 14px;
                            margin-right: 10px;
                            position: relative;
                            text-align: center;
                            transition: border 250ms ease-in-out, background-color 250ms ease-in-out;
                            width: 14px;
                        }
                    }

                    &:checked {
                        + label {
                            position: relative;

                            &:before {
                                background-color: rgba(var(--color-primary), 1);
                                border: 1px solid rgba(var(--color-primary), 1);
                                box-shadow: none;
                            }

                            &:after {
                                border: solid rgba(var(--color-interface), 1);
                                border-width: 0 2px 2px 0;
                                content: '';
                                display: block;
                                height: 9px;
                                left: 5px;
                                position: absolute;
                                top: 1px;
                                transform: rotate(45deg);
                                width: 4px;
                            }
                        }

                        &[disabled],
                        &.is-disabled {
                            + label:after {
                                border-color: rgba(var(--color-base750), 1);
                            }
                        }
                    }

                    &:focus {
                        + label {
                            &:before {
                                border-color: rgba(var(--color-primary), 1);
                                box-shadow: 0 0px 2px 0px rgba(var(--color-primary), 1);
                                outline: none;
                            }
                        }
                    }

                    &:disabled,
                    &.is-disabled {
                        cursor: not-allowed;

                        + label {
                            color: rgba(var(--color-base800), 1);
                            cursor: not-allowed;

                            &:before {
                                border-color: rgba(var(--color-border), 1);
                                background: rgba(var(--color-base900), 1);
                                box-shadow: none;
                                cursor: not-allowed;
                            }

                            + label.checkbox__description {
                                color: rgba(var(--color-font-secondary), 1);
                                cursor: not-allowed;
                            }
                        }
                    }

                    + label {
                        &:empty {
                            &:before {
                                margin-right: 0;
                            }
                        }
                    }

                    &.inputGroup__checkbox--indeterminate + label:before {
                        background-color: transparent;
                        box-shadow: none;
                    }

                    // manually style indeterminate 'checkbox' by offsetting a pseudo element on the following label
                    // should be replaced by native indeterminate styling once available as real property in css
                    &.inputGroup__checkbox--indeterminate + label:after {
                        box-shadow: 0 0 1px rgba(var(--color-primary-darker), 1);
                        content: "";
                        display: block;
                        position: absolute;
                        width: 8px;
                        height: 2px;
                        background-color: rgba(var(--color-primary), 1);
                        left: 4px;
                        top: 9px;
                    }
                }

                .button.item__favorite {
                    font-size: $iconSizeM;
                    height: 32px;
                    padding: 7px 7px;
                }

                .item__icon {
                    align-items: center;
                    display: flex;
                    flex-shrink: 0;
                    font-size: $iconSizeL;
                    margin-right: 8px;
                    pointer-events: none;

                    // IE11 does not bubble the active state hence we set it to none and then activate it again for all browsers except IE11
                    // otherwise inside the item no clickable elements (e.g. buttons) would be possible
                    @supports (outline-offset: -2px) {
                        pointer-events: auto;
                    }
                }

                .item__content {
                    flex-grow: 1;
                    overflow: hidden;
                    pointer-events: none;
                    white-space: nowrap;

                    // IE11 does not bubble the active state hence we set it to none and then activate it again for all browsers except IE11
                    // otherwise inside the item no clickable elements (e.g. buttons) would be possible
                    @supports (outline-offset: -2px) {
                        pointer-events: auto;
                    }

                    .label,
                    h4 {
                        font-family: $defaultFont;
                        font-size: $ms0-fontSize;
                        line-height: $ms0-lineHeight;
                        margin-bottom: 0;
                        margin-top: 0;
                        text-overflow: ellipsis;
                        overflow: hidden;
                        font-weight: normal;
                    }

                    .description {
                        color: rgba(var(--color-font-secondary), 1);
                        font-size: $ms-1-fontSize;
                        line-height: $ms-1-lineHeight;
                        text-overflow: ellipsis;
                        overflow: hidden;
                    }

                    &::after {
                        content: "";
                        position: absolute;
                        inset: 0;
                    }
                }

                .item__metaInfo {
                    align-items: center;
                    display: flex;
                    flex-shrink: 0;
                    font-size: $ms3-fontSize;
                    pointer-events: none;
                    width: 32px;
                    justify-content: center;

                    // IE11 does not bubble the active state hence we set it to none and then activate it again for all browsers except IE11
                    // otherwise inside the item no clickable elements (e.g. buttons) would be possible
                    @supports (outline-offset: -2px) {
                        pointer-events: auto;
                    }

                    .iconUxt.arrowSingleRight {
                        font-size: $iconSizeM;
                    }
                }
            }

            &.list__item--drilldown {
                background-color: inherit;

                .item__metaInfo:last-child {
                    padding-right: 32px;
                }
            }

            &.list__item--oneLine {
                .description {
                    display: none;
                }
            }

            &.list__item--threeLine {
                .description {
                    text-overflow: ellipsis;
                    overflow: hidden;
                    -webkit-line-clamp: 2;
                    display: -webkit-box;
                    -webkit-box-orient: vertical;
                    white-space: normal;
                }
            }

            .item__drilldown {
                @include item__action();
                @include iconUxt-regular(arrowSingleRight);
                right: 4px;
                top: 0;
                bottom: 0;
                height: auto;

                &:before {
                    position: relative;
                    font-size: $iconSizeM;
                    width: 32px;
                    z-index: 1;
                }
            }
        }
    }

    // alternative coloring for lists
    &--alternateBgColor {
        background-color: rgba(var(--color-interface), 1);
    }

    &--compact {
        .listNavigation__list {
            .list__item {
                .item__link {
                    height: 32px;
                    min-height: 32px;

                    .item__content {

                        .label {
                            line-height: 1.1em;
                        }

                        .description {
                            line-height: 1.1em;
                        }
                    }
                }
            }
        }
    }
}